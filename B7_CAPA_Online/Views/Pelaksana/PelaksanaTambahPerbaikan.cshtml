
@{
    ViewBag.Title = "TambahTindakan";
}

<style>
    @@media (min-width: 768px) {
        .modal-xl {
            width: 900%;
            max-width: 1300px;
        }
    }
</style>

<script src="~/Content/Scripts/plugins/block-ui/jquery.blockUI.js" defer nonce="m640czyK2gSytg4iv-GH93_ESQZ5AjOK3w"></script>

<div class="content-body">
    <!--Modal-->
    <div class="row page-titles mx-0">
        <div class="col p-md-0">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="javascript:void(0)">Dashboard</a></li>
                <li class="breadcrumb-item active"><a href="javascript:void(0)">Pelaksana CAPA</a></li>
            </ol>
        </div>
    </div>
    <!-- row -->

    <div class="container-fluid">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Pelaksana CAPA</h4>
                <form>
                    <div class="row">
                        <div class="form-group mb-2 col-sm-3">
                            <label class="m-t-20">Tanggal</label>
                            <input type="text" id="date-format" class="form-control form-control-sm" value="@DateTime.Now.ToString("MM/dd/yyyy HH:mm")" disabled readonly>
                        </div>
                        <div class="form-group mb-2 col-sm-3">
                            <label class="m-t-20">Nomor CAPA</label>
                            <input class="form-control form-control-sm" type="text" id="TxtNoCAPA" readonly>
                        </div>
                        <div class="form-group mb-2 col-sm-3">
                            <label class="m-t-40">Atasan Pelaksana</label>
                            <input class="form-control form-control-sm" type="text" id="TxtRequestor" readonly>
                        </div>
                        <div class="form-group mb-2 col-sm-3">
                            <label class="m-t-40">Departemen</label>
                            <input class="form-control form-control-sm" type="text" id="TxtDepartemen" readonly>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="card" hidden>
                    <div class="card-body">
                        <label class="m-t-40">--Please Select--<span style="color: red">*</span></label>
                        <div class="radio input-group">
                            <div class="col-sm-3">
                                <label><input type="radio" value="Yes" id="Yes" name="TambahPerbaikan">&nbsp;&nbsp;Tambah Perbaikan Baru</label>
                            </div>
                            <div class="col-sm-3">
                                <label><input type="radio" value="No" name="TambahPerbaikan" checked>&nbsp;&nbsp;Tambah Pencegahan Existing</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card" id="RootCause" hidden>
                    <div class="card-body">
                        <div class="row form-group-sm">
                            <div class="col-md-6">
                                <label class="m-t-20">Root Cause</label>
                                <select id="RootCause_DDL" class="form-control">
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card" id="Div_TindakanPerbaikan" hidden>
                    <div class="card-body">
                        <h4 class="card-title">Penambahan Tindakan Perbaikan</h4>
                        <form>

                            <div class="row form-group-sm">
                                <div class="col-md-6">
                                    <label class="m-t-20">Tindakan Perbaikan<span style="color: red">*</span></label>
                                    <textarea type="text" class="form-control" placeholder="Deskripsi" id="TxtDeskripsiPerbaikan"></textarea>
                                </div>
                                <div class="form-group mb-2 col-sm-3">
                                    <label class="m-t-20">Due Date</label>
                                    <input type="date" id="duedate_perbaikan" class="form-control form-control-sm">
                                </div>
                            </div>
                            <div class="row form-group">

                                <div class="col-md-12 mb-3">
                                    <label class="m-t-40" style="visibility: hidden">_</label>
                                    <div class="input-group">
                                        <button type="button" id="btn_AddPerbaikan" style="background-color: green;" class="btn mb-1 btn-primary ">Tambahkan Tindakan Perbaikan</button>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <div>
                            <h4 class="card-title">Tindakan Perbaikan</h4>
                            <table class="table table-hover table-bordered zero-configuration" style="color: black" id="Tbl_Perbaikan">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                        <th>Root Cause</th>
                                        <th>Tindakan Perbaikan</th>
                                        <th>Nama Pelaksana</th>
                                        <th>Superior</th>
                                        <th>Due_Date</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="card" id="btnPencegahan" hidden>
                    <div class="card-body">
                        <div class="col-md-12">
                            <label class="m-t-40">Apakah ada proses / area lain yang berpotensi sama ?</label>
                            <div class="radio input-group" id="AreaLainRadio">
                                <div class="col-sm-3">
                                    <label><input type="radio" value="Yes" id="AreaYes" name="Potensi">Ya</label>
                                </div>
                                <div class="col-sm-3">
                                    <label><input type="radio" value="No"  id="AreaNo" name="Potensi" checked>Tidak</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card" id="Div_TindakanPencegahan" hidden="hidden">
                    <div class="card-body">
                        <h4 class="card-title">Penambahan Tindakan Pencegahan</h4>
                        <form>
                            <div class="row form-group-sm">
                                <div class="col-md-6">
                                    <label class="m-t-20">Area / Proses lain yang Berpotensi</label>
                                    <textarea type="text" class="form-control" id="txtRootCausePencegahan"></textarea>
                                </div>
                            </div>
                            <div class="row form-group-sm">
                                <div class="col-md-6">
                                    <label class="m-t-20">Tindakan Pencegahan<span style="color: red">*</span></label>
                                    <textarea type="text" class="form-control" id="TxtDeskripsiPencegahan" placeholder="Deskripsi"></textarea>
                                </div>
                                <div class="form-group mb-2 col-sm-3">
                                    <label class="m-t-20">Due Date</label>
                                    <input type="date" id="duedate_pencegahan" class="form-control form-control-sm">
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col-md-12 mb-3">
                                    <label class="m-t-40" style="visibility: hidden">_</label>
                                    <div class="input-group">
                                        <button type="button" id="btn_AddPencegahan" style="background-color: green;" class="btn mb-1 btn-primary ">Tambahkan Tindakan Pencegahan</button>
                                    </div>
                                </div>

                            </div>
                            <h4 class="card-title">Tindakan Pencegahan</h4>
                            <div>
                                <table class="table table-hover table-bordered " style="color: black" id="Tbl_Pencegahan">
                                    <thead>
                                            <tr>
                                            <th></th>
                                            <th></th>
                                            <th></th>
                                            <th>Root Cause</th>
                                            <th>Area Lain/Proses Lain</th>
                                            <th>Tindakan Pencegahan</th>
                                            <th>Nama Pelaksana</th>
                                            <th>Superior</th>
                                            <th>Due_Date</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </form>

                    </div>

                </div>

                <div class="card" id="PerbaikanExisting">
                    <div class="card-body">
                        <h4 class="card-title">Penentuan Tindakan Perbaikan</h4>
                        <form>
                            <div class="row form-group">
                                <div class="col-md-6">
                                    <label class="m-t-20">Root Cause</label>
                                    <textarea type="text" class="form-control" id="txtRootCauseExisting" readonly></textarea>
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col-md-6">
                                    <label class="m-t-20">Tindakan Perbaikan<span style="color: red">*</span></label>
                                    <textarea type="text" class="form-control" placeholder="Deskripsi" id="txtTindakanPerbaikan"></textarea>
                                </div>
                                <div class="form-group mb-2 col-sm-3">
                                    <label class="m-t-20">Due Date<span style="color: red">*</span></label>
                                    <input type="date" id="dueDatePerbaikan" class="form-control form-control-sm">
                                </div>
                            </div>


                        </form>
                    </div>
                </div>

                <div class="card" id="Div_Pencegahan">
                    <div class="card-body">
                        <h4 class="card-title">Penentuan Tindakan Pencegahan</h4>
                        <form>
                            <div class="row form-group-sm">
                                <div class="col-md-6">
                                    <label class="m-t-20">Area/Proses lain yang berpotensi</label>
                                    <textarea type="text" class="form-control" id="txtAreaBerpotensi" ></textarea>
                                </div>
                            </div>
                            <div class="row form-group-sm">
                                <div class="col-md-6">
                                    <label class="m-t-20">Tindakan Pencegahan<span style="color: red">*</span></label>
                                    <textarea type="text" class="form-control" placeholder="Deskripsi" id="txtTindakanPencegahan"></textarea>
                                </div>
                                <div class="form-group mb-2 col-sm-3">
                                    <label class="m-t-20">Due Date<span style="color: red">*</span></label>
                                    <input type="date" id="dueDatePencegahan" class="form-control form-control-sm">
                                </div>
                            </div>
                            <br />
                            <button type="button" class="btn btn-primary" id="AddPencegahan" style="background-color: green;">Add</button>
                        </form>
                        <table class="table table-hover table-bordered zero-configuration" style="color: black" id="Tbl_PencegahanExt">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th>Root Cause</th>
                                    <th>Area Lain/Proses Lain</th>
                                    <th>Tindakan Pencegahan</th>
                                    <th>Nama Pelaksana</th>
                                    <th>Superior</th>
                                    <th>Due_Date</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                        <br />
                    </div>
                </div>
                @Html.Partial("KajianResikoPV")
                <div class="card">
                    <div class="card-body">
                        <div class="row form-group-sm">
                            <div class="col-md-6 mt-3">
                                <button class="btn mb-1 btn-primary" id="Kamus" style="background-color:orange;">Lihat Kamus Kriteria Resiko</button>
                            </div>
                        </div>
                        <div class="row form-group-sm">
                            <div class="col-md-6 mt-3">
                                <button class="btn mb-1 btn-primary" style="background-color: green;" id="btnSimpan" disabled>Submit</button>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

            <input type="text" id="input_NoCAPA" value="@ViewBag.NoCAPA" hidden>
        </div>
        <!-- #/ container -->
    </div>
</div>

<script nonce="6hiODP2cMhqGxufx3FCt0OuKBVQqo1pzMQ">
    var noCAPA = getQueryStrings()["NoCAPA"];
    $('#input_NoCAPA').val(noCAPA);
    var referenceID = getQueryStrings()["ReferenceID"];
    var nik = '@Request.RequestContext.HttpContext.Session["NIK"]';
    var namauser = '@Request.RequestContext.HttpContext.Session["NamaUser"]';
    var departemen = '@Request.RequestContext.HttpContext.Session["Departemen"]';
    var email ='@Request.RequestContext.HttpContext.Session["Email"]';
    var superiorName = '@Request.RequestContext.HttpContext.Session["SuperiorName"]';
    var lokasi = '@Request.RequestContext.HttpContext.Session["Lokasi"]';
    var tindakan = getQueryStrings()["Tindakan"];
    var dataPerbaikan;
    var newDataPerbaikan;
    var newKajianResiko = [];
    var objTindakan;
    var tipe;
    var jenis;
    var values;
    var rootPencegahan;
    var laststate = false;
    function getQueryStrings() {
        var vars = [], hash;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }
        return vars;
    }

    $(document).ready(function () {

        if (lokasi == 'BPD') {
            lokasi = 'CKR'
        }
        else if (lokasi == 'BPG') {
            lokasi = 'PLG'
        }
        if (departemen == 'Engineering' || departemen == 'Quality Control' || departemen == 'Warehouse' || departemen == 'Produksi') {
            departemen = departemen + ' ' + lokasi;
        }
        $('#TxtDepartemen').val('@Request.RequestContext.HttpContext.Session["Departemen"]');
        $('#TxtNoCAPA').val(noCAPA);
        $('#TxtRequestor').val(superiorName);
        jenis = "Pencegahan Existing";
        KajianResikoDDL();
        GetTindakanPerbaikanPV();
        GetTindakanPencegahanExistingPV();
        DeleteTindakanPerbaikanPV();
        DeleteTindakanPencegahanPV();
        DeleteTindakanPencegahanExtPV();
        TableKajian();
        retrieveData();
        retrieveData2();
        getRootCause();
        $("#TxtPIC").val('Default');
        KajianDDLPencegahan();
        //$('#RootCause_KajianResikoDDL').prop("disabled", true);
        $('#tblHeaderTindakan').prop("hidden", true);

        if (tindakan == 'Pencegahan' || tindakan == 'Perbaikan')
        {
            $("input[name='TambahPerbaikan']").prop("disabled", true);
            document.getElementById("Yes").checked = true;
            $('#Div_TindakanPerbaikan').prop('hidden', false);
            $('#RootCause').prop('hidden', false);
            $('#btnPencegahan').prop('hidden', false);
            $('#PerbaikanExisting').prop('hidden', true);
            $('#Div_Pencegahan').prop('hidden', true);
            KajianDDLPerbaikanBaru();
            GetTindakanPencegahanPV();
            TableKajianTambahTindakanBaru();
            AreaLain();
        }

        $('#Kamus').click(function () {
            window.open('../Content/Images/SD-QO-QS-1008 Kamus Kriteria Risiko.pdf', '_blank', 'fullscreen=yes')
        })
        $('#Tbl_KajianResiko tbody').on('click', 'button.delete', function () {
            DeleteKajianResiko(this);
        })
        $("input[name='TambahPerbaikan']").change(function () {
            var tambahperbaikan = $('input[name="TambahPerbaikan"]:checked').val();
            if (tambahperbaikan == "Yes") {
                $('#Div_TindakanPerbaikan').prop('hidden', false);
                $('#PerbaikanExisting').prop('hidden', true);
                $('#Div_Pencegahan').prop('hidden', true);
                $('#RootCause').prop('hidden', false);
                $('#btnPencegahan').prop('hidden', false);
                KajianDDLPerbaikanBaru();
                GetTindakanPencegahanPV();
                TableKajianTambahTindakanBaru();
                var data = $('#Tbl_KajianResiko').DataTable().data();
                var totdata = data.count();

                if (totdata > 0) {
                    $('#btnSimpan').prop("disabled", false);
                }
                AreaLain();
            }
            else {
                $('#PerbaikanExisting').prop('hidden', false);
                $('#Div_Pencegahan').prop('hidden', false);
                $('#btnSimpan').prop('hidden', false);
                $('#Div_TindakanPerbaikan').prop('hidden', true);
                $('#Div_TindakanPencegahan').prop('hidden', true);
                $('#RootCause').prop('hidden', true);
                $('#btnPencegahan').prop('hidden', true);
                KajianDDLPencegahan();

                TableKajian();
            }
        });

        $("input[name='Potensi']").change(function () {
            var berpotensi = $('input[name="Potensi"]:checked').val();
            if (berpotensi == "Yes") {
                $('#Div_TindakanPencegahan').prop('hidden', false);
            }
            else
            {
                var tabelpencegahan = $('#Tbl_Pencegahan').DataTable().data().count();
                if (tabelpencegahan > 0)
                {
                    document.getElementById("AreaYes").checked = true;
                    Swal.fire({
                        title: "Error!",
                        text: "Mohon Tindakan Pencegahan yang sudah di-input dihapus terlebih dahulu.",
                        icon: "error",
                        showConfirmButton: false,
                        timer: 1000,
                    })
                    return;
                }
                $('#Div_TindakanPencegahan').prop('hidden', true);
            }
        });

        $("#txtTindakanPerbaikan").on('keyup', function (event) {
            var perb = $("#txtTindakanPerbaikan").val();
            $("#txtAreaBerpotensi").val(perb);
        });

        $('#DepartemenPerbaikan_DDL').change(function () {
            $('#TxtEmailPerbaikan').val("");
            var kategori = 'Perbaikan';
            $('#Div_VendorNamePerbaikan').prop('hidden', true);

            var dept = $('#DepartemenPerbaikan_DDL').val();
            if (dept == "Others") {
                $('#Div_VendorNamePerbaikan').prop('hidden', false);
                $('#VendorPerbaikan_DDL').change(function () {
                    getPICKajianResiko(kategori);
                });
            }
            getPICKajianResiko(kategori);
        });

        $('#btnSimpan').click(function () {

            var berpotensi = $('input[name="TambahPerbaikan"]:checked').val();

            if (berpotensi == "Yes") {
                $.blockUI();
                SubmitTindakanBaru();
            }
            else
            {
                $.blockUI();
                SubmitTindakanExisting();
            }
        })

        $('#RootCause_KajianResikoDDL').change(function () {
            var val = $('#RootCause_KajianResikoDDL option:selected').text();
            var berpotensi = $('input[name="TambahPerbaikan"]:checked').val();
            if (berpotensi == "Yes") {
                if (val.indexOf('[Perbaikan]') == 0) {
                    tipe = "Perbaikan";
                    jenis = "Perbaikan Baru";
                }
                else {
                    tipe = "Pencegahan"
                    jenis = "Pencegahan Baru";
                }
            }
            else {
                jenis = "Pencegahan Existing";
            }
        });
        $('#btn_AddKajian').click(function () {
            KajianResikoDDL();
            console.log(namauser);
            //console.log(values);
        });
        $('#btn_AddPencegahan').click(function () {
            var dto = {};
            var kategori = "Pencegahan";
            var obj = rootPencegahan;
            if ($('#txtRootCausePencegahan').val().trim() == "") {
                return Swal.fire({
                    title: "Error!",
                    text: "Area Lain Berpoten Harus Diisi !",
                    icon: "error",
                    showConfirmButton: false,
                    timer: 1000,
                })
            }
            console.log(rootPencegahan);
            $.each(obj, function (key, value) {
                if (value.WhyDesc == $('#RootCause_DDL').val()) {

                    dto = {
                        Option: 9,
                        NO_CAPA: noCAPA,
                        Aspect: value.WAHType_FK,
                        WhyID: value.WhyID,
                        WhyDesc: $('#RootCause_DDL').val(),
                        WhyParentID: value.WhyParentID,
                        RootCause: $('#RootCause_DDL').val(),
                        Is_AreaLain: $('#txtRootCausePencegahan').val(),
                        Tindakan: $('#TxtDeskripsiPencegahan').val(),
                        Pelaksana: nik,
                        Departemen: departemen,
                        LineNumber: value.LineNumber,
                        DueDate: $('#duedate_pencegahan').val(),
                        NamaPersonil: namauser,
                        Email: email,
                        Create_By: nik,
                        Status: "Pencegahan Baru",
                        Status_ID: 0,
                        SP: "[dbo].[SP_FORM_CAPA]"
                    }

                }
            });
            addTindakan(dto, kategori);


        });
        $('#btn_KajianResiko').click(function () {
            //recTindakan(0);

                var pic = "";
                if ($('#Severity_DDL').val() == 10 || $('#TxtRiskLevel').val() == 'High' || $('#TxtRiskLevel').val() == 'Very High') {
                    pic = $('#TxtPIC').val();
                }
                dto = {
                    Model: {
                        RecordID: values.RecordID,
                        NO_CAPA: noCAPA,
                        Tipe: jenis,
                        Tindakan: values.Tindakan,
                        P_Kegagalan: $('#TxtPotensiKegagalan').val(),
                        Spek: $('#TxtSpesifikasi').val(),
                        Dampak: $('#TxtDampak').val(),
                        Severity: $('#Severity_DDL').val(),
                        Penyebab: $('#TxtPenyebabPotensial').val(),
                        M_Penyebab: $('#TxtMPenyebabPotensial').val(),
                        Likelihood: $('#Likelihood_DDL').val(),
                        M_PKegagalan_LMD: $('#TxtMPotensi_KLMD').val(),
                        Detectability: $('#Detectability_DDL').val(),
                        RPN: $('#TxtRPN').val(),
                        RiskLevel: $('#TxtRiskLevel').val(),
                        Target: $('#Target_DDL').val(),
                        M_PKegagalan: $('#TxtMPotensi_K').val(),
                        Severity2: $('#Severity2_DDL').val(),
                        P_MPenyebab: $('#TxtMPenyebab_P').val(),
                        Likelihood2: $('#Likelihood2_DDL').val(),
                        P_MDPKegagalan: $('#TxtDPotensi_K').val(),
                        Detectability2: $('#Detectability2_DDL').val(),
                        RPN2: $('#TxtRPN2').val(),
                        RiskLevel2: $('#TxtRiskLevel2').val(),
                        PIC: nik,
                        DueDate: $('#DueDate_Kajian').val(),
                        Lainnya: $('#TxtLainnya').val(),
                        EmpID: nik,
                        Status: 10
                    }
                }

                elementID = {
                    NO_CAPA: '#input_NoCAPA',
                    Tindakan: '#RootCause_KajianResikoDDL',
                    P_Kegagalan: '#TxtPotensiKegagalan',
                    Spek: '#TxtSpesifikasi',
                    Dampak: '#TxtDampak',
                    Severity: '#Severity_DDL',
                    Penyebab: '#TxtPenyebabPotensial',
                    M_Penyebab: '#TxtMPenyebabPotensial',
                    Likelihood: '#Likelihood_DDL',
                    M_PKegagalan_LMD: '#TxtMPotensi_KLMD',
                    Detectability: '#Detectability_DDL',
                    RPN: '#TxtRPN',
                    RiskLevel: '#TxtRiskLevel',
                    Target: '#Target_DDL',
                    M_PKegagalan: '#TxtMPotensi_K',
                    Severity2: '#Severity2_DDL',
                    P_MPenyebab: '#TxtMPenyebab_P',
                    Likelihood2: '#Likelihood2_DDL',
                    P_MDPKegagalan: '#TxtDPotensi_K',
                    Detectability2: '#Detectability2_DDL',
                    RPN2: '#TxtRPN2',
                    RiskLevel2: '#TxtRiskLevel2',
                    DueDate: '#DueDate_Kajian',
                    Lainnya: '#TxtLainnya'
                }
                var date = new Date();
                var datekajian = new Date($('#DueDate_Kajian').val());
                var limit = (dto.Model.Severity == 10 || dto.Model.RiskLevel == "High" || dto.Model.RiskLevel == "Very High") ? (25) : (14);
                var i = 0;
                for (var property in dto.Model) {
                    if (limit == 14) {
                        if (i > 14 && i <=26) {
                            if (elementID[property] != undefined) {
                                $(elementID[property]).val("");
                                if (i == 17 || i == 19 || i == 21) { //ini index array untuk dropdownlist Severity2, Likelihood2, dan Detectability2
                                    $(elementID[property]).val('-');
                                }

                            }
                            delete dto.Model[property];
                        }
                    } else {
                        if ($('#TxtRiskLevel2').val() == 'High' || $('#TxtRiskLevel2').val() == 'Very High') {
                            valid = false;
                            return Swal.fire({
                                title: 'Maaf',
                                text: 'Risk Level masih tinggi.',
                                icon: "warning",
                                showConfirmButton: false,
                                timer: 1000,
                            })
                        }
                        //if ($('#Severity2_DDL').val() == '10') {
                        //    valid = false;
                        //    return Swal.fire(
                        //        'Maaf',
                        //        'Severity masih tinggi.',
                        //        'warning'
                        //    )
                        //}
                        if ($('#Target_DDL').val() == "Low" && $('#TxtRiskLevel2').val() == 'Medium') {
                            valid = false;
                            return Swal.fire({
                                title: 'Maaf',
                                text: 'Risk Level masih tinggi.',
                                icon: "warning",
                                showConfirmButton: false,
                                timer: 1000,
                            })
                        }
                    }
                    i++;
                }
                var count = 0;
                //console.log("limit : " + limit);
                $.each(dto.Model, function (key, value) {
                    if (key === "M_PKegagalan" || key === "P_MPenyebab" || key == "P_MDPKegagalan") {
                        if (dto.Model.Severity == 10 || dto.Model.RiskLevel == "High" || dto.Model.RiskLevel == "Very High") {
                            if (dto.Model.M_PKegagalan == "" && dto.Model.P_MPenyebab == "" && dto.Model.P_MDPKegagalan == "") {
                                Swal.fire({
                                    title: 'Maaf',
                                    text: 'Input field "Menghilangkan Potensi Kegagalan / Penyimpangan" atau "Perbaikan untuk mengatasi Penyebab Potensial" atau "Perbaikan untuk meningkatkan deteksi potensi kegagalan" wajib diisi salah satu.',
                                    icon: "warning",
                                    showConfirmButton: false,
                                    timer: 1000,
                                })
                                valid = false;
                                return false;

                            }
                            if (dto.Model.DueDate == "") {
                                Swal.fire({
                                    title: 'Maaf',
                                    text: 'Mohon untuk mengisi DueDate PIC Treatment.',
                                    icon: "warning",
                                    showConfirmButton: false,
                                    timer: 1000,
                                })
                                valid = false;
                                return false;
                            }
                            if (date.getTime() > datekajian.getTime()) {
                                Swal.fire({
                                    title: 'Maaf',
                                    text: 'Tanggal Due Date tidak boleh hari ini atau kurang dari hari ini',
                                    icon: "warning",
                                    showConfirmButton: false,
                                    timer: 1000,
                                })
                                valid = false;
                                return false;
                            }
                        }
                        count++;
                        return;
                    } else {
                        //console.log(key + ": " + value);
                        if (value == "") {
                            //console.log(dto.Model);
                            if (count <= limit) {
                                var label;
                                if (count == 13 || count == 14 || count == 22 || count == 23) {
                                    label = "Mohon untuk mengisi nilai Severity, Likelihood, dan Detectability yang tersedia.";
                                } else {
                                    label = 'Input field "' + $("label[for='" + elementID[Object.keys(dto.Model)[count]].substring(1) + "']").text() + '" Mohon di isi.';
                                }
                                Swal.fire({
                                    title: 'Maaf',
                                    text: label,
                                    icon: "warning",
                                    showConfirmButton: false,
                                    timer: 1000,
                                })
                                valid = false;
                                return false;
                            }

                        }
                    }
                    count++;
                    valid = true;
                });


                if (valid) {
                    $.ajax({
                        url: '../PIC/AddKajian',
                        type: 'post',
                        dataType: 'json',
                        data: JSON.stringify(dto),
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            if (data != null) {
                                Swal.fire({
                                    title: 'Success',
                                    text:'Data berhasil di-input.',
                                    icon: 'success',
                                    showConfirmButton: false,
                                    timer: 1000,
                                }).then(function (result) {
                                    RemoveModalInput();
                                    // fetch to table
                                    var tambahperbaikan = $('input[name="TambahPerbaikan"]:checked').val();
                                    if (tambahperbaikan == "Yes") {
                                        TableKajianTambahTindakanBaru();
                                        $('#btnSimpan').prop("disabled", false);
                                    }
                                    else {
                                        TableKajian();
                                        $('#btnSimpan').prop("disabled", false);
                                        $("input[name='TambahPerbaikan']").prop("disabled", true);
                                    }
                                });
                            }
                        },
                        error: function (ex) {
                            console.log(JSON.stringify(ex))
                        }
                    });
                }

        });

    });
    function GetTindakanPerbaikanPV() {
        var dictlist = {
            NoCAPA: noCAPA,
            Option: 7,
            NIK: nik
        }
        var dto1 = {
            Model: dictlist
        }
        $.ajax({
            url: 'DynamicController?spname=SP_SHOW_Tindakan_PV',
            type: 'post',
            data: JSON.stringify(dto1),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var table = $('#Tbl_Perbaikan').DataTable({
                    "pageLength": 5,
                    "lengthChange": false,
                    "info": false,
                    "searching": false,
                    "paging": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "scrollCollapse": true,
                    "destroy": true,
                    "columns": [
                        { "data": "RecordID" },
                        { "data": "WhyID" },
                        { "data": "WhyParentID" },
                        { "data": "WhyDesc" },
                        { "data": "Tindakan_Perbaikan" },
                        { "data": "Nama_Personil"},
                        { "data": "SupApprover" },
                        { "data": "Due_Date" },
                        {
                            "data": null,
                            "defaultContent": "<button class='btn btn-danger delete' type='button' name='delete'>Delete</button> ",
                            "visible": (!isHide) ? (true) : (false)
                        }
                    ],
                    "columnDefs": [
                        {
                            "targets": [0],
                            "visible": false
                        },
                        {
                            "targets": [1],
                            "visible": false
                        },
                        {
                            "targets": [2],
                            "visible": false
                        }
                    ],
                    "order": [[1, 'asc']],
                })
            },
            error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });
    }
    function GetTindakanPencegahanPV() {
        var dictlist = {
            NoCAPA: noCAPA,
            Option: 8,
            NIK: nik
        }
        var dto1 = {
            Model: dictlist
        }
        $.ajax({
            url: '../Koordinator/DynamicController?spname=SP_SHOW_Tindakan_PV',
            type: 'post',
            data: JSON.stringify(dto1),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

                if (JSON.parse(data).length > 0) {
                    document.getElementById("AreaYes").checked = true;
                    $('#Div_TindakanPencegahan').prop("hidden", false);
                }
                var table = $('#Tbl_Pencegahan').DataTable({
                    "pageLength": 5,
                    "lengthChange": false,
                    "info": false,
                    "searching": false,
                    "paging": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "scrollCollapse": true,
                    "destroy": true,
                    "columns": [
                        { "data": "RecordID" },
                        { "data": "WhyID" },
                        { "data": "WhyParentID" },
                        { "data": "WhyDesc" },
                        { "data": "AreaLain" },
                        { "data": "Tindakan_Pencegahan" },
                        { "data": "Nama_Personil" },
                        { "data": "SupApprover" },
                        { "data": "Due_Date" },
                        {
                            "data": null,
                            "defaultContent": "<button class='btn btn-danger delete' type='button' name='delete'>Delete</button> ",
                            "visible": (!isHide) ? (true) : (false)
                        }
                    ],
                    "columnDefs": [
                        {
                            "targets": [0],
                            "visible": false
                        },
                        {
                            "targets": [1],
                            "visible": false
                        },
                        {
                            "targets": [2],
                            "visible": false
                        }
                    ],
                    "order": [[1, 'asc']],
                })
            },
            error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });

    }

    function GetTindakanPencegahanExistingPV() {
        var dictlist = {
            NoCAPA: noCAPA,
            Option: 9,
            NIK: nik
        }
        var dto1 = {
            Model: dictlist
        }
        $.ajax({
            url: 'DynamicController?spname=SP_SHOW_Tindakan_PV',
            type: 'post',
            data: JSON.stringify(dto1),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var table = $('#Tbl_PencegahanExt').DataTable({
                    "pageLength": 5,
                    "lengthChange": false,
                    "info": false,
                    "searching": false,
                    "paging": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "scrollCollapse": true,
                    "destroy": true,
                    "columns": [
                        { "data": "RecordID" },
                        { "data": "WhyID" },
                        { "data": "WhyParentID" },
                        { "data": "WhyDesc" },
                        { "data": "AreaLain" },
                        { "data": "Tindakan_Pencegahan" },
                        { "data": "Nama_Personil" },
                        { "data": "SupApprover" },
                        { "data": "Due_Date" },
                        {
                            "data": null,
                            "defaultContent": "<button class='btn btn-danger delete'  type='button' name='delete'>Delete</button> ",
                            "visible": (!isHide) ? (true) : (false)
                        }
                    ],
                    "columnDefs": [
                        {
                            "targets": [0],
                            "visible": false
                        },
                        {
                            "targets": [1],
                            "visible": false
                        },
                        {
                            "targets": [2],
                            "visible": false
                        }
                    ],
                    "order": [[1, 'asc']],
                })
            },
            error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });
    }
    function DeleteTindakanPerbaikanPV() {
        $(document).on("click", "#Tbl_Perbaikan button.delete", function () {
            var rows = $(this).closest('tr');
            var data = $('#Tbl_Perbaikan').DataTable().row(rows).data();

            var dictlist = {
                NoCAPA: noCAPA,
                Option: 12,
                RecordID: data.RecordID,
                TypeTindakan: 'Perbaikan Baru'
            }
            var dto1 = {
                Model: dictlist
            }

            Swal.fire({
                title: 'Apakah anda yakin?',
                text: "Action ini akan menghapus semua Tindakan Pencegahan yang dimiliki oleh Tindakan Perbaikan ini.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Delete',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        url: 'DynamicController?spname=SP_SHOW_Tindakan_PV',
                        type: 'post',
                        data: JSON.stringify(dto1),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            var result = JSON.parse(data);
                            console.log(data);
                            if (result[0].Stat == 'DELETED') {
                                Swal.fire({
                                    title: 'Success',
                                    text: 'Tindakan berhasil di hapus.',
                                    icon: 'success',
                                    showConfirmButton: false,
                                    timer: 1000,
                                }).then(() => {
                                    GetTindakanPerbaikanPV();
                                    KajianDDLPerbaikanBaru();
                                    retrieveData2();
                                });
                            }
                        },
                        error: function (ex) {
                            console.log(JSON.stringify(ex))
                        }
                    });
                }
            });
        });
    }
    function DeleteTindakanPencegahanPV() {
        $(document).on("click", "#Tbl_Pencegahan button.delete", function () {
            var rows = $(this).closest('tr');
            var data = $('#Tbl_Pencegahan').DataTable().row(rows).data();

            var dictlist = {
                NoCAPA: noCAPA,
                Option: 11,
                RecordID: data.RecordID,
                TypeTindakan: 'Pencegahan Baru'
            }
            var dto1 = {
                Model: dictlist
            }
            Swal.fire({
                title: 'Apakah anda yakin?',
                text: "Action ini akan menghapus Tindakan Pencegahan yang dipilih.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Delete',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        url: 'DynamicController?spname=SP_SHOW_Tindakan_PV',
                        type: 'post',
                        data: JSON.stringify(dto1),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            var result = JSON.parse(data);
                            if (result[0].STATUS == "DELETED") {
                                Swal.fire({
                                    title: 'Success',
                                    text: 'Tindakan berhasil di hapus.',
                                    icon: 'success',
                                    showConfirmButton: false,
                                    timer: 1000,
                                });

                                GetTindakanPencegahanPV();
                                KajianDDLPerbaikanBaru();
                            }

                        },
                        error: function (ex) {
                            console.log(JSON.stringify(ex))
                        }
                    });

                }
            });
        });

    }

    function DeleteTindakanPencegahanExtPV() {
        $(document).on("click", "#Tbl_PencegahanExt button.delete", function () {
            var rows = $(this).closest('tr');
            var data = $('#Tbl_PencegahanExt').DataTable().row(rows).data();

            var dictlist = {
                NoCAPA: noCAPA,
                Option: 11,
                RecordID: data.RecordID,
                TypeTindakan:'Pencegahan Existing'
            }
            var dto1 = {
                Model: dictlist
            }
            console.log(data.RecordID);
            Swal.fire({
                title: 'Apakah anda yakin?',
                text: "Action ini akan menghapus Tindakan Pencegahan yang dipilih.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Delete',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        url: 'DynamicController?spname=SP_SHOW_Tindakan_PV',
                        type: 'post',
                        data: JSON.stringify(dto1),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            var result = JSON.parse(data);
                            if (result[0].STATUS == "DELETED") {
                                Swal.fire({
                                    title: 'Success',
                                    text: 'Tindakan berhasil di hapus.',
                                    icon: 'success',
                                    showConfirmButton: false,
                                    timer: 2000
                                })
                                GetTindakanPencegahanExistingPV();
                                KajianDDLPencegahan();
                            }

                        },
                        error: function (ex) {
                            console.log(JSON.stringify(ex))
                        }
                    });

                }
            });
        });
    }
    function KajianResikoDDL() {
        $.ajax({
            url: 'DynamicController?spname=SP_FORM_CAPA',
            type: 'post',
            data: JSON.stringify({
                Model: {
                    Option: 10,
                    NO_CAPA: noCAPA
                }
            }),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                //console.log(JSON.parse(data))
                objTindakan = JSON.parse(data);
                recTindakan();
                //console.log('Halaman PV dalam KajianResikoDDLPV(): ' + objTindakan);
                //$('#RootCause_KajianResikoDDL').empty();
                //$('#RootCause_KajianResikoDDL').append('<option disabled selected hidden class="dropdown-header">--Please Select--</option>');
                //$.each(JSON.parse(data), function (key, value) {
                //    $('#RootCause_KajianResikoDDL').append(new Option(value.Tindakan, value.Tindakan));
                //});
            },
            error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });
    }

    function recTindakan() {
        var tambahperbaikan = $('input[name="TambahPerbaikan"]:checked').val();

        for (var i = 0; i < objTindakan.length; i++) {
            if (tambahperbaikan == "Yes") {
                if (objTindakan[i].RecordID == $('#RootCause_KajianResikoDDL').val() && objTindakan[i].Tipe == tipe) {
                    values = objTindakan[i];
                    $('#TxtPICName').val(values.Nama_Personil);
                    console.log(values);
                    break;
                }
            }
            else
            {
                if (objTindakan[i].RecordID == $('#RootCause_KajianResikoDDL').val()  && objTindakan[i].Tipe == "Pencegahan") {
                    values = objTindakan[i];
                    console.log(values);
                    $('#TxtPICName').val(values.Nama_Personil);
                    break;
                }
            }
        }
    }

    function TableKajianTambahTindakanBaru() {
        $.ajax({
            url: 'DynamicController?spname=SP_Find_Data',
            type: 'post',
            data: JSON.stringify({
                Model: {
                    nomorCAPA: noCAPA,
                    kategori: "Kajian Resiko Tambah Tindakan Baru",
                    tipe: jenis,
                    nik: nik
                }
            }),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                //console.log(data);
                $('#Tbl_KajianResiko').DataTable({
                    "pageLength": 5,
                    "lengthChange": false,
                    "paging": false,
                    "info": false,
                    "searching": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "bDestroy": true,
                    "scrollCollapse": true,
                    "columns": [
                        { "data": "Tindakan" },
                        { "data": "P_Kegagalan" },
                        { "data": "Spek" },
                        { "data": "Dampak" },
                        { "data": "Severity" },
                        { "data": "Penyebab" },
                        { "data": "M_Penyebab" },
                        { "data": "Likelihood" },
                        { "data": "M_PKegagalan_LMD" },
                        { "data": "Detectability" },
                        { "data": "RPN" },
                        {
                            "data": "RiskLevel",
                            "className": "riskLevel"
                        },
                        { "data": "Target" },
                        { "data": "M_PKegagalan" },
                        { "data": "Severity2" },
                        { "data": "P_MPenyebab" },
                        { "data": "Likelihood2" },
                        { "data": "P_MDPKegagalan" },
                        { "data": "Detectability2" },
                        { "data": "RPN2" },
                        {
                            "data": "RiskLevel2",
                            "className": "riskLevel2"
                        },
                        { "data": "FullName" },
                        { "data": "DueDate" },
                        { "data": "Lainnya" },
                        {
                            "data": null,
                            "defaultContent": "<button class='btn btn-danger delete' type='button' name='delete'  >Delete</button> ",
                            "visible": (!isHide) ? (true) : (false)
                        },
                    ],

                    "order": [[1, 'asc']],
                    "rowCallback": function (row, data) {
                        ColoredColumns(row, data.RiskLevel, "riskLevel");
                        ColoredColumns(row, data.RiskLevel2, "riskLevel2");
                    }
                });
                var result = JSON.parse(data);
                if (result.length > 0) {

                    $('#btnSimpan').prop("disabled", false);
                }
            },
            error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });
        //var totaldata = $('#Tbl_KajianResiko').DataTable().data().count();
        //alert(totaldata);
        //if (totaldata > 0) {
        //    $('#btnSimpan').prop("disabled", false);
        //}
    }

    function TableKajian() {
        var refid = parseInt(referenceID);
        $.ajax({
            url: 'DynamicController?spname=SP_Find_Data',
            type: 'post',
            data: JSON.stringify({
                Model: {
                    nomorCAPA: noCAPA,
                    kategori: "Kajian Resiko Pencegahan Existing",
                    tipe: jenis,
                    refid: refid
                }
            }),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                //console.log(data);
                $('#Tbl_KajianResiko').DataTable({
                    "pageLength": 5,
                    "lengthChange": true,
                    "paging": false,
                    "info": false,
                    "searching": false,
                    "data": JSON.parse(data),
                    "select": true,
                    "bDestroy": true,
                    "scrollCollapse": true,
                    "columns": [
                        { "data": "Tindakan" },
                        { "data": "P_Kegagalan" },
                        { "data": "Spek" },
                        { "data": "Dampak" },
                        { "data": "Severity" },
                        { "data": "Penyebab" },
                        { "data": "M_Penyebab" },
                        { "data": "Likelihood" },
                        { "data": "M_PKegagalan_LMD" },
                        { "data": "Detectability" },
                        { "data": "RPN" },
                        {
                            "data": "RiskLevel",
                            "className": "riskLevel"
                        },
                        { "data": "Target" },
                        { "data": "M_PKegagalan" },
                        { "data": "Severity2" },
                        { "data": "P_MPenyebab" },
                        { "data": "Likelihood2" },
                        { "data": "P_MDPKegagalan" },
                        { "data": "Detectability2" },
                        { "data": "RPN2" },
                        {
                            "data": "RiskLevel2",
                            "className": "riskLevel2"
                        },
                        { "data": "FullName" },
                        { "data": "DueDate" },
                        { "data": "Lainnya" },
                        {
                            "data": null,
                            "defaultContent": "<button class='btn btn-danger delete' type='button' name='delete'  >Delete</button> ",
                            "visible": (!isHide) ? (true) : (false)
                        },
                    ],
                    "order": [[1, 'asc']],
                    "rowCallback": function (row, data) {
                        ColoredColumns(row, data.RiskLevel, "riskLevel");
                        ColoredColumns(row, data.RiskLevel2, "riskLevel2");
                    }
                });
                var result = JSON.parse(data);
                if (result.length > 0) {

                    $('#btnSimpan').prop("disabled", false);
                }
            },
            error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });
        //var totdata = $('#Tbl_KajianResiko').DataTable();
        //var count = totdata .data().count();
        //if (count > 0) {
        //    $('#btnSimpan').prop("disabled", false);
        //}
    }

    function DeleteKajianResiko(button) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Delete!',
            reverseButtons: true
        }).then((result) => {
            if (result.value) {
                var rows = $(button).closest('tr');
                var data = $('#Tbl_KajianResiko').DataTable().row(rows).data();
                var id = data['RecordID'];
                var tipe = data['Tipe'];
                //console.log(data);
                //console.log({
                //    Model: {
                //        Option: data.Option,
                //        NO_CAPA: data.NoCAPA_FK,
                //        LineNumber: data.LineNumber,
                //        RecordID: data.RecordID
                //    }
                //});

                $.ajax({
                    url: 'DynamicController?spname=[dbo].[SP_FORM_Perubahan]',
                    type: 'post',
                    dataType: 'json',
                    data: JSON.stringify({
                        Model: {
                            Option: 27,
                            RecordID: id
                        }
                    }),
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        Swal.fire({
                            title: "Deleted!",
                            text: 'Kajian Berhasil Di Hapus!',
                            icon: "success",
                            showConfirmButton: false,
                            timer: 1000,
                        }).then(() => {
                            var tambahperbaikan = $('input[name="TambahPerbaikan"]:checked').val();
                            if (tambahperbaikan == "Yes") {
                                TableKajianTambahTindakanBaru();
                            }
                            else {
                                TableKajian();
                            }

                        }
                    )},
                    error: function (ex) {
                        console.log(JSON.stringify(ex))
                    }
                });


            }
        })
    }

    function SubmitTindakanExisting()
    {

            var dictionarylist = {
                kategori: "Penambahan Submit Existing",
                recordID: referenceID,
                empID: nik,
                NoCAPA: noCAPA
            }
            var dto = {
                Model: dictionarylist
            }
            $.ajax({
                url: "DynamicController?spname=SP_Update_Pelaksanaan",
                type: "POST",
                data: JSON.stringify(dto),
                contentType: "application/json",
                dataType: 'json',
                success: function (data) {
                    var result = JSON.parse(data);
                    $.unblockUI();
                    if (result[0].Validate == "Invalid Pencegahan")
                    {
                        Swal.fire({
                            title: "Error!",
                            text: "Masih ada Tindakan Pencegahan yang belum dikaji !",
                            icon: "error",
                            showConfirmButton: false,
                            timer: 1000,
                        })
                    }
                    else {
                        Swal.fire({
                            title: "Success!",
                            text: "Submit Berhasil!",
                            icon: "success",
                            showConfirmButton: false,
                            timer: 1000,
                        })
                        $.blockUI();
                        $.ajax({
                            url: 'SubmitApproval',
                            type: 'post',
                            data: JSON.stringify({
                                Model: {
                                    NO_CAPA: noCAPA,
                                    Temp_Status: 10,
                                    Tindakan: 'Penambahan Existing',
                                    EmpID: nik
                                }
                            }),
                            dataType: 'json',
                            contentType: 'application/json; charset=utf-8',
                            success: function (data) {
                            },
                            error: function (ex) {
                                console.log(JSON.stringify(ex))
                            }
                        });

                        window.location.href = '../PendingTask/TaskList';
                        $("input[name='TambahPerbaikan']").prop("disabled", false);

                    }
                },
                error: function (xhr, error, status) {
                    console.log(error, status);
                }
            });

    }
    function SubmitTindakanBaru()
    {

        var dictlist =
        {
            NoCAPA: noCAPA,
            kategori: "Penambahan Submit",
            empID: nik
        }
        var dto1 = {
            Model: dictlist
        }
            $.ajax({
                url: "DynamicController?spname=SP_Update_Pelaksanaan",
                type: "post",
                dataType: "json",
                data: JSON.stringify(dto1),
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    var result = JSON.parse(data);
                    $.unblockUI();
                    if (result[0].Validate == "Invalid Perbaikan") {


                        Swal.fire({
                            title: "Error!",
                            text: "Masih ada Tindakan Pencegahan yang belum dikaji !",
                            icon: "error",
                            showConfirmButton: false,
                            timer: 1000,
                        })
                    }
                    else if (result[0].Validate == "Invalid Pencegahan") {


                        Swal.fire({
                            title: "Error!",
                            text: "Masih ada Tindakan Pencegahan yang belum dikaji !",
                            icon: "error",
                            showConfirmButton: false,
                            timer: 1000,
                        })

                    }
                    else {
                        Swal.fire({
                            title: "Success!",
                            text: "Submit Berhasil!",
                            icon: "success",
                            showConfirmButton: false,
                            timer: 1000,
                        })
                        $.blockUI();
                        $.ajax({
                            url: 'SubmitApproval',
                            type: 'post',
                            data: JSON.stringify({
                                Model: {
                                    NO_CAPA: noCAPA,
                                    Temp_Status: 10,
                                    Tindakan: 'Penambahan Baru',
                                    EmpID: nik
                                }
                            }),
                            dataType: 'json',
                            contentType: 'application/json; charset=utf-8',
                            success: function (data) {
                            },
                            error: function (ex) {
                                console.log(JSON.stringify(ex))
                            }
                        });
                        window.location.href = '../PendingTask/TaskList';
                        $("input[name='TambahPerbaikan']").prop("disabled", false);
                    }
                },
                error: function (errormessage) {
                    $('#divLoading').attr("hidden", true);
                }
            });



    }
    function getVendorDDL() {
        $.ajax({
            url: 'DynamicController?spname=[dbo].[SP_SHOW_DDL]',
            type: 'post',
            data: JSON.stringify({
                Model: {
                    Option: 16
                }
            }),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $('#VendorPerbaikan_DDL').empty();
                $('#VendorPencegahan_DDL').empty();
                $.each(JSON.parse(data), function (key, value) {
                    $('#VendorPerbaikan_DDL').append(new Option(value.vendor_name, value.vendor_id));
                    $('#VendorPencegahan_DDL').append(new Option(value.vendor_name, value.vendor_id));
                });
            },
            error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });
    }

    function getPICKajianResiko(kategori) {
        $('#TxtEmail').val("");
        $.ajax({
            url: 'DynamicController?spname=[dbo].[SP_SHOW_DDL]',
            type: 'post',
            data: JSON.stringify({
                Model: {
                    Option: 17,
                    Departemen: $('#Departemen' + kategori + '_DDL').val(),
                    VendorID: vendor,
                    NO_CAPA: noCAPA
                }
            }),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $('#NamaPersonil' + kategori + '_DDL').empty();
                $('#NamaPersonil' + kategori + '_DDL').append('<option disabled selected hidden class="dropdown-header">--Please Select--</option>');
                $.each(JSON.parse(data), function (key, value) {
                    $('#NamaPersonil' + kategori + '_DDL').append(new Option(value.EmpName, value.EmpID));
                });

                $('#NamaPersonil' + kategori + '_DDL').change(function () {
                    $.each(JSON.parse(data), function (key, value) {
                        if (nik == value.EmpID) {
                            if (value.Email_1 == null)
                                $('#TxtEmail' + kategori).val(value.Email_2);
                            else
                                $('#TxtEmail' + kategori).val(value.Email_1);
                            return false;
                        }
                    });
                });
            },
            error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });
    }


    function RemoveInputField(kategori) {
        $('#TxtDeskripsi' + kategori).val("");
        $('#duedate_' + kategori.toLowerCase()).val("");
        $('#Departemen' + kategori + '_DDL').val("-").trigger("change");
    }


    function retrieveData() {
        $.ajax({
            url: '../PIC/GetDataPIC',
            type: 'post',
            data: JSON.stringify({
                Option: 6,
                NO_CAPA: noCAPA,
                SP: "[dbo].[SP_FORM_CAPA]"
            }),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (rootcause) {
                var countAdd = 0;
                $('#RootCause_DDL').empty();

                $('#RootCause_DDL').append(new Option("*Pilih*", ""));
                $.each(JSON.parse(rootcause), function (key, value) {
                    $('#RootCause_DDL').append(new Option(value.WhyDesc, value.WhyDesc));
                });
                $('#RootCause_DDL').select2();
                $('#btn_AddPerbaikan').click(function () {
                        var dto = {};
                        var kategori = "Perbaikan";
                    var obj = JSON.parse(rootcause);
                    if ($('#TxtDeskripsiPerbaikan').val().trim() == "") {
                        return Swal.fire({
                            title: 'Maaf',
                            text: 'Tindakan Perbaikan harus diisi',
                            icon: 'warning',
                            showConfirmButton: false,
                            timer: 1000,
                        })
                    }
                        console.log(obj)
                    $.each(obj, function (key, value) {
                            if (value.WhyDesc == $('#RootCause_DDL').val()) {
                                dto = {
                                    Option: 7,
                                    NO_CAPA: noCAPA,
                                    Aspect: value.Aspect,
                                    WhyID: value.WhyID,
                                    WhyParentID: value.ParentID,
                                    RootCause: value.WhyDesc,
                                    Tindakan: $('#TxtDeskripsiPerbaikan').val(),
                                    Pelaksana: nik,
                                    Departemen: departemen,
                                    LineNumber: value.LineNumber,
                                    DueDate: $('#duedate_perbaikan').val(),
                                    NamaPersonil: namauser,
                                    Email: email,
                                    Is_AreaLain: $('input[name="Potensi"]:checked').val(),
                                    Create_By: nik,
                                    Status:"Perbaikan Baru",
                                    Status_ID: 0,
                                    SP: "[dbo].[SP_FORM_CAPA]"
                                }
                            }
                    });
                    //console.log(dto);
                        addTindakan(dto, kategori);

                });

            },
            error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });
    }
    function AreaLain() {
        var dictlist =
        {
            Option: 8,
            NO_CAPA: noCAPA,
            Status_Perbaikan: 'Perbaikan Baru'
        }
        var dto = {
            Model: dictlist
        }
        $.ajax({
            url: "DynamicController?spname=[dbo].[SP_FORM_CAPA]",
            type: "POST",
            async: false,
            dataType: "json",
            data: JSON.stringify(dto),
            contentType: "application/json;charset=utf-8",
            success: function (data) {
                var result = JSON.parse(data);
                $('#AreaLain_DDL').empty();
                $('#AreaLain_DDL').append(new Option("*Pilih*", ""));
                $.each(JSON.parse(data), function (key, value) {
                    $('#AreaLain_DDL').append(new Option(value.Tindakan_Perbaikan, value.Tindakan_Perbaikan));
                });

            }, error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });
    }
    function retrieveData2() {
        var dictlist =
        {
            Option: 6,
            NO_CAPA: noCAPA
        }
        var dto1 = {
            Model: dictlist
        }
        $.ajax({
            url: 'DynamicController?spname=[dbo].[SP_FORM_CAPA]',
            type: 'post',
            data: JSON.stringify(dto1),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (area_lain) {
                var data = JSON.parse(area_lain);
                console.log(data);
                rootPencegahan = data;
            },
            error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });
    }

    function getRootCause() {
        var dto = {
            Kategori: "Cari Perbaikan",
            RecordID: referenceID
        }
        $.ajax({
            url: "FindCAPADetail",
            type: "POST",
            async: false,
            dataType: "json",
            data: JSON.stringify(dto),
            contentType: "application/json;charset=utf-8",
            success: function (data) {
                var result = JSON.parse(data);
                dataPerbaikan = result[0];
                var duedate = moment(dataPerbaikan.Due_Date);
                $('#txtRootCauseExisting').val(dataPerbaikan.WhyDesc);
                $('#txtTindakanPerbaikan').val(dataPerbaikan.Tindakan_Perbaikan);
                //$('#txtAreaBerpotensi').val(dataPerbaikan.Tindakan_Perbaikan);
                $('#txtTindakanPerbaikan').prop("disabled", true);
                $('#dueDatePerbaikan').val(duedate.format("YYYY-MM-DD"));
                $('#RootCause_KajianResikoDDL').empty();
                $('#RootCause_KajianResikoDDL').val(dataPerbaikan.Tindakan_Pencegahan);
                $('#dueDatePerbaikan').prop("disabled", true);
                @*$('#txtAreaBerpotensi').val(dataPerbaikan.WhyDesc);*@

            }, error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });
    }

    function addTindakan(dto, kategori) {
        var valid = false;
        $.each(dto, function (key, value) {
            if (value == '' || value == '-' || value == null) {
                if (value == 0 || typeof value === "undefined")
                    valid = true;
                else
                    return valid = false;
            } else {
                valid = true;
            }
        });
        if (kategori == "Perbaikan") {
            var date = new Date();
            var dateperbaikan = new Date($('#duedate_perbaikan').val());
            if (date.getTime() > dateperbaikan.getTime()) {
                Swal.fire({
                    title: 'Maaf',
                    text: 'Tanggal Due Date tidak boleh hari ini atau kurang dari hari ini',
                    icon: 'warning',
                    showConfirmButton: false,
                    timer: 1000,
                })
                return;
            }
            if ($('#duedate_perbaikan').val() == '' || $('#duedate_perbaikan').val() == undefined)
            {
                Swal.fire({
                    title: 'Maaf',
                    text:'Tanggal Due Date Harus Diisi',
                    icon: 'warning',
                    showConfirmButton: false,
                    timer: 1000,
                })

                return;
            }
        }
        if (kategori == "Pencegahan")
        {
            var date = new Date();
            var datepencegahan = new Date($('#duedate_pencegahan').val());
            if (date.getTime() > datepencegahan.getTime())
            {

                Swal.fire({
                    title: 'Maaf',
                    text: 'Tanggal Due Date tidak boleh hari ini atau kurang dari hari ini',
                    icon: 'warning',
                    showConfirmButton: false,
                    timer: 1000,
                })
                return;
            }
            if ($('#duedate_pencegahan').val() == '' || $('#duedate_pencegahan').val() == undefined) {
                Swal.fire({
                    title: 'Maaf',
                    text: 'Tanggal Due Date Harus Diisi',
                    icon: 'warning',
                    showConfirmButton: false,
                    timer: 1000,
                })
                return;
            }
        }
        if (valid) {
            $.ajax({
                url: 'AddTindakan',
                type: 'post',
                data: JSON.stringify(dto),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',

                success: function (data) {
                    var status = JSON.parse(data);
                    if ((status[0].Status_Inserted == 'Tindakan Perbaikan' || status[0].Status_Inserted == 'Tindakan Pencegahan') && status[0].Stat =='Valid') {
                        Swal.fire({
                            title: 'Success',
                            text: status[0].Status_Inserted + ' berhasil di-input.',
                            icon: "success",
                            showConfirmButton: false,
                            timer: 1000,
                        }).then((result) => {
                            if (result.value) {
                                RemoveInputField(kategori);
                            }
                            $("input[name='TambahPerbaikan']").prop("disabled", true);
                            AreaLain();
                            GetTindakanPerbaikanPV();
                            GetTindakanPencegahanPV();
                            KajianDDLPerbaikanBaru();
                            KajianResikoDDL();
                        });
                    }
                    else {
                        Swal.fire({
                            title: 'Error',
                            text: status[0].Status_Inserted + ' sudah ada.',
                            icon: "error",
                            showConfirmButton: false,
                            timer: 1000,
                        })
                    }
                },
                error: function (ex) {
                    console.log(JSON.stringify(ex))
                }
            });
        } else {
            Swal.fire({
                title: 'Maaf',
                text: 'RootCause tidak boleh kosong.',
                icon: 'warning',
                showConfirmButton: false,
                timer: 1000,
            })
        }
    }



    function cleanModalFields() {
        $("#KajianResikoModal :input").val("");
        $("#TxtPIC").val('Default');
        $("#Severity_DDL").val("1");
        $("#Likelihood_DDL").val("1");
        $("#Detectability_DDL").val("1");
        $("#Target_DDL").val("Low");
        $("#Severity2_DDL").val("1");
        $("#Likelihood2_DDL").val("1");
        $("#Detectability2_DDL").val("1");
    }

    function KajianDDLPerbaikanBaru() {
        var dictlist = {
            Kategori: "Cari Perbaikan Baru",
            nomorCAPA: noCAPA,
            nik: nik
        }
        var dto = {
            Model: dictlist
        }
        $.ajax({
            url: "DynamicController?spname=SP_Find_Data",
            type: "POST",
            async: false,
            dataType: "json",
            data: JSON.stringify(dto),
            contentType: "application/json;charset=utf-8",
            success: function (data) {
                var result = JSON.parse(data);
                $('#RootCause_KajianResikoDDL').empty();
                $('#RootCause_KajianResikoDDL').append('<option disabled selected hidden class="dropdown-header">--Please Select--</option>');
                for (var i = 0; i < result.length; i++) {
                    $('#RootCause_KajianResikoDDL').append(new Option("[Perbaikan]" + " " + result[i].Tindakan_Perbaikan, result[i].RecordID));
                }
                @* $('#txtAreaBerpotensi').val(dataPerbaikan.WhyDesc);*@
                KajianDDLPencegahanBaru(result);
            }, error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });
    }

    function KajianDDLPencegahanBaru(result) {
        var dictlist = {
            Kategori: "Cari Pencegahan Baru",
            nomorCAPA: noCAPA,
            nik: nik
        }
        var dto = {
            Model: dictlist
        }
        $.ajax({
            url: "DynamicController?spname=SP_Find_Data",
            type: "POST",
            async: false,
            dataType: "json",
            data: JSON.stringify(dto),
            contentType: "application/json;charset=utf-8",
            success: function (data) {
                var hasil = JSON.parse(data);
                $('#RootCause_KajianResikoDDL').prop("disabled", false);

                if (hasil.length > 0 || result.length >0) {

                    $('#RootCause_KajianResikoDDL').attr('disable', false);
                    $('#btn_AddKajian').prop("disabled", false);
                }
                else if (hasil.length <= 0 && result.length <= 0) {
                    $('#RootCause_KajianResikoDDL').attr('disable', true);
                    $('#btn_AddKajian').prop("disabled", true);
                }
                for (var i = 0; i < hasil.length; i++) {
                    $('#RootCause_KajianResikoDDL').append(new Option("[Pencegahan]" + " " + hasil[i].Tindakan_Pencegahan, hasil[i].RecordID));

                }
                //objTindakan += result;
                @* $('#txtAreaBerpotensi').val(dataPerbaikan.WhyDesc);*@
            }, error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });
    }

    function KajianDDLPencegahan() {
        var dictlist = {
            Kategori: "Cari Pencegahan",
            RecordID: referenceID,
            nomorCAPA: noCAPA
        }
        var dto = {
            Model: dictlist
        }
        $.ajax({
            url: "DynamicController?spname=SP_Find_Data",
            type: "POST",
            async: false,
            dataType: "json",
            data: JSON.stringify(dto),
            contentType: "application/json;charset=utf-8",
            success: function (data) {
                var result = JSON.parse(data);
                $('#RootCause_KajianResikoDDL').empty();

                if (result.length > 0) {

                    $('#RootCause_KajianResikoDDL').prop("disabled", false);
                    $('#RootCause_KajianResikoDDL').append('<option disabled selected hidden class="dropdown-header">--Please Select--</option>');
                    $('#btn_AddKajian').prop("disabled", false);
                }
                else {
                    $('#RootCause_KajianResikoDDL').append('<option disabled selected hidden class="dropdown-header">--Please Select--</option>');
                    $('#btn_AddKajian').prop("disabled", true);
                    $('#RootCause_KajianResikoDDL').attr('disabled', true);
                }
                for (var i = 0; i < result.length; i++) {
                    $('#RootCause_KajianResikoDDL').append(new Option("[Pencegahan]" + " " + result[i].Tindakan_Pencegahan, result[i].RecordID));

                }
                @* $('#txtAreaBerpotensi').val(dataPerbaikan.WhyDesc);*@
                //objTindakan += result;
            }, error: function (ex) {
                console.log(JSON.stringify(ex))
            }
        });
    }

    $('#AddPencegahan').click(function (e) {
        var referenceID = getQueryStrings()["ReferenceID"];
        referenceID = referenceID.replace('#', '');
        var date = new Date();
        var datepencegahan = new Date($('#dueDatePencegahan').val());
        if (date.getTime() > datepencegahan.getTime()) {
            return Swal.fire({
                title: "Error!",
                text: "Tanggal due date tidak boleh kurang dari hari ini",
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }
        if ($('#txtTindakanPencegahan').val().trim() == '') {
            return Swal.fire({
                title: "Error!",
                text: "Tindakan Pencegahan tidak boleh kosong !",
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }
        if ($('#txtAreaBerpotensi').val().trim() == '') {
            return Swal.fire({
                title: "Error!",
                text: "Area/Proses Lain tidak boleh kosong !",
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }
        if ($('#dueDatePencegahan').val() == '') {
            return Swal.fire({
                title: "Error!",
                text: "Due Date Harus di isi!",
                icon: "error",
                showConfirmButton: false,
                timer: 1000,
            })
        }
        var dictionarylist = {
            kategori: "Penambahan Pencegahan",
            AreaLain: $('#txtAreaBerpotensi').val(),
            TindakanPencegahan: $('#txtTindakanPencegahan').val(),
            DueDatePencegahan: $('#dueDatePencegahan').val(),
            IsAreaLain: 1,
            KajianResikoList: newKajianResiko,
            RecordID: referenceID,
            EmpId: nik,
            NoCAPA: noCAPA
        }
        var dto = {
            Model: dictionarylist
        }
        $.ajax({
            url: "DynamicController?spname=SP_Update_Pelaksanaan",
            type: "POST",
            data: JSON.stringify(dto),
            contentType: "application/json",
            dataType: 'json',
            success: function (data) {
                Swal.fire({
                    title: "Success!",
                    text: "Penambahan berhasil disimpan!",
                    icon: "success",
                    showConfirmButton: false,
                    timer: 1000,
                })
                $("input[name='TambahPerbaikan']").prop("disabled", true);
                $('#txtTindakanPencegahan').val("");
                $('#dueDatePencegahan').val("")
                KajianDDLPencegahan();
                GetTindakanPencegahanExistingPV();
            },
            error: function (xhr, error, status) {
                console.log(error, status);
            }
        });
        //var isAreaLain = $('input[name="radioPotensi"]:checked').val();
        //var adaPencegahan = 0;
        //if (isAreaLain == 'Yes') {
        //    adaPencegahan = 1;
        //}
        //var referenceID = getQueryStrings()["ReferenceID"];
        //referenceID = referenceID.replace('#', '');

        //newDataPerbaikan = {
        //    TindakanPerbaikan: $('#txtTindakanPerbaikan').val(),
        //    DueDatePerbaikan: $('#dueDatePerbaikan').val(),
        //    TindakanPencegahan: $('#txtTindakanPencegahan').val(),
        //    DueDatePencegahan: $('#dueDatePencegahan').val(),
        //    IsAreaLain: adaPencegahan,
        //    KajianResikoList: newKajianResiko,
        //    PerbaikanID: referenceID,
        //    Updater: nik
        //}
        //console.log(newDataPerbaikan);
        //$.ajax({
        //    url: "SimpanPerbaikanBaru",
        //    type: "POST",
        //    data: JSON.stringify(newDataPerbaikan),
        //    contentType: "application/json",
        //    dataType: 'json',
        //    success: function (data) {
        //        alert("Penambahan berhasil disimpan");

        //        ReloadPage();
        //    },
        //    error: function (xhr, error, status) {
        //        console.log(error, status);
        //    }
        //});

        @*var modePerbaikan = $("#modePerbaikan").val();
        var idPerbaikan = $('#ddlPerbaikan').val();
        var tindakanPerbaikan = $('#txtTindakanPerbaikan').val();
        var dueDate = $('#dueDatePerbaikan').val();
        var hasilPerbaikan = $('#txtHasilPerbaikan').val();
        var attachmentPerbaikan = $("#uploadAttachmentPerbaikan").val();
        var pelaksanaID = getQueryStrings()["PelaksanaID"];
        var status = "Pending Review Koordinator";
        var kategori = "Perbaikan";

        pelaksanaID = pelaksanaID.replace('#', '');
        idPerbaikan = parseInt(idPerbaikan);
        var formData = new FormData();
        formData.append("Hasil", hasilPerbaikan);
        formData.append("TindakanID", idPerbaikan);
        formData.append("Updater", pelaksanaID);
        formData.append("NomorCAPA", noCAPA);
        formData.append("Tindakan", tindakanPerbaikan);
        formData.append("DueDate", dueDate);

        $.ajax({
            url: "SimpanHasilPelaksanaan",
            type: "POST",
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            async: false,
            success: function (data) {
                swal("Data perbaikan berhasil diupdate!", {
                    icon: "success",
                    buttons: false,
                    timer: 1000,
                });
                ReloadPage();
            },
            error: function (xhr, error, status) {
                console.log(error, status);
            }
        });*@
    });
</script>